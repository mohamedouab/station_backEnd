{"version":3,"sources":["scripts/app.js"],"names":["homeApi","$http","BASE_URL","BASE_URL_SELF","getAll","get","getAllRecette","getOne","id","addOne","pompe","post","connecter","request","put","saveOne","deleteOne","getAllHistory","cuveApi","cuve","brand","deposer","angular","module","appHeader","HeaderController","$scope","$state","seasonService","headerName","$inject","directive","restrict","templateUrl","controller","controllerAs","bindToController","footer","FooterController","factory","callBack","then","response","data","error","success","user","fromJson","console","log","status","add","entry","debug","save","delete","entryId","filteredResult","HomeController","homeService","cuveService","pompeForm","added","IsVisibleConnection","selectedPompe","selectedCuve","pompes","IsVisible","calculeClose","pompesRecette","loadAll","submitPompe","updateIndex","alert","calculeResset","getTotal","total","i","length","recette","getAllCuves","cuves","idPompe","idCuve","HistoriquePompeController","DepotageController","depot","quantite","CuveController","$stateParams","cuveForm","isVisiblesVisible","isVisible","submitCuve","ComptabiliteController","value","runBlock","$log","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","template","otherwise","config","AppCtrl","constant","locales","zh_CN","fr_FR","en_GB","preferredLocale","$logProvider","debugEnabled","$httpProvider","$templateCache"],"mappings":"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","file":"scripts/app-5424d582d3.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('station-ui', [\r\n            'ngAnimate',     \r\n            'ngMaterial',\r\n\t\t\t'ngResource',\r\n\t\t\t'ui.router',\r\n            'api','ui.bootstrap'\r\n        ]);\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('station-ui')\r\n        .directive('appHeader', appHeader);\r\n\r\n    /** @ngInject */\r\n    function appHeader() {\r\n        var directive = {\r\n            restrict: 'E',\r\n            templateUrl: 'app/components/header/header.html',\r\n            controller: ['$scope', '$state', HeaderController],\r\n            controllerAs: 'vm',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        /** @ngInject */\r\n        function HeaderController($scope, $state, seasonService) {\r\n\r\n            $scope.headerName = 'Head of App';\r\n\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('station-ui')\r\n    .directive('appFooter', footer);\r\n\r\n  /** @ngInject */\r\n  function footer() {\r\n    var directive = {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/footer/footer.html',\r\n      controller: FooterController,\r\n      controllerAs: 'vm',\r\n      bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    //function FooterController(SessionService, LoginService, $scope) {\r\n    function FooterController($scope) {\r\n\r\n      /*$scope.isLoaded = false;\r\n\r\n      if (!SessionService.isAuthenticated() && SessionService.hasToken()) {\r\n\r\n        LoginService.authByCookieToken(function (company) {\r\n          SessionService.setCompany(company);\r\n          $scope.isLoaded = true;\r\n        });\r\n      }else{\r\n        $scope.isLoaded = true;\r\n      }\r\n\r\n      $scope.isAuthenticated = SessionService.isAuthenticated;\r\n      $scope.isAnonymous = SessionService.isAnonymous;*/\r\n\r\n    }\r\n  }\r\n\r\n})();\r\n\nangular.module('station-ui')\r\n\t.factory('HomeService', ['HomeApi', function (homeApi) {\r\n\r\n    return {\r\n\r\n        getAll: function (callBack) {\r\n            homeApi.getAll() .then(function (response) {\r\n                callBack(response.data);\r\n            }).catch(function (error) {\r\n            });\r\n        },\r\n\r\n        getAllRecette: function (callBack) {\r\n            homeApi.getAllRecette() .then(function (response) {\r\n                callBack(response.data);\r\n            }).catch(function (error) {\r\n            });\r\n        },\r\n        \r\n        getOne: function (id, callBack) {\r\n\r\n            homeApi.getOne(id).success(function (response) {\r\n                //custom, filter or make a specific mapping between response and UI\r\n                var user = response && response != \"\" ? angular.fromJson(response) : null;\r\n                console.log(user);\r\n\r\n                //Delayed precessing when http request is completed\r\n                callBack(user);\r\n            })\r\n                .error(function (response, status) {\r\n                    console.log('Error with response: ' + response + ', status :' + status);\r\n                });\r\n        },\r\n\r\n        add: function (entry, callBack) {\r\n            // homeApi.addOne(entry).success(function (response) {\r\n            //     callBack(response);\r\n            // })\r\n            //     .error(function (status) {\r\n            //    alert('Error with response status :' + status);\r\n            //     });\r\n\r\n            homeApi.addOne(entry)\r\n                .then(function (response) {\r\n                    callBack(response);\r\n                }).catch(function (error) {\r\n                    console.debug('>> catch');\r\n                    console.debug(error);\r\n                });\r\n        },\r\n\r\n        save: function (entry,callBack) {\r\n            homeApi.saveOne(entry)\r\n                    .then(function (response) {\r\n                        callBack(response);\r\n                    }).catch(function (error) {\r\n                        console.debug(error);\r\n                    });\r\n        },\r\n\r\n        connecter: function (entry,callBack) {\r\n            homeApi.connecter(entry)\r\n                .then(function (response) {\r\n                    callBack(response);\r\n                }).catch(function (error) {\r\n                console.debug(error);\r\n            });\r\n        },\r\n\r\n        delete: function (entryId, callBack) {\r\n            homeApi.deleteOne(entryId).success(function (response) {\r\n                var filteredResult = response && response != \"\" ? angular.fromJson(response) : null;\r\n                //console.log(filteredResult);\r\n\r\n                //Delayed precessing when http request is completed\r\n                callBack(filteredResult);\r\n            })\r\n                .error(function (response, status) {\r\n                    console.log('Error with response: ' + response + ', status :' + status);\r\n                });\r\n        },\r\n        getAllHistory: function (callBack) {\r\n            homeApi.getAllHistory() .then(function (response) {\r\n                callBack(response.data);\r\n            }).catch(function (error) {\r\n            });\r\n        }\r\n\r\n    }\r\n}]);\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('station-ui')\r\n        .controller('HomeController', ['$scope', 'HomeService','CuveService', HomeController]);\r\n\r\n    /** @ngInject */\r\n    function HomeController($scope, homeService,cuveService) {\r\n        $scope.pompeForm = {\r\n        };\r\n        $scope.added=false;\r\n        $scope.IsVisibleConnection=false;\r\n        $scope.selectedPompe={\r\n        };\r\n\r\n        $scope.selectedCuve={\r\n        };\r\n\r\n        homeService.getAll(function (pompes) {\r\n            $scope.pompes = pompes;\r\n            $scope.IsVisible = true;\r\n        });\r\n        $scope.calculeClose=function()\r\n        {\r\n            $scope.pompesRecette =null;\r\n        }\r\n        $scope.loadAll=function()\r\n        {\r\n            homeService.getAll(function (pompes) {\r\n                $scope.pompes = pompes;\r\n            });\r\n        }\r\n        $scope.submitPompe = function() {\r\n            homeService.add($scope.pompeForm, function (response) {\r\n                $scope.added=true;\r\n            });\r\n        }\r\n        $scope.updateIndex = function() {\r\n            homeService.save($scope.selectedPompe, function (response) {\r\n                alert('Index pompe '+$scope.selectedPompe.id +' modifié')\r\n                $scope.selectedPompe={\r\n                };\r\n                $scope.loadAll();\r\n\r\n            });\r\n        }\r\n        $scope.calculeResset = function() {\r\n            homeService.getAllRecette(function (response) {\r\n                $scope.pompesRecette = response;\r\n            });\r\n        }\r\n        $scope.getTotal = function(){\r\n            var total = 0;\r\n            for(var i = 0; i < $scope.pompesRecette.length; i++){\r\n                var pompe = $scope.pompesRecette[i];\r\n                total += pompe.recette;\r\n            }\r\n            return total;\r\n        }\r\n\r\n        $scope.getAllCuves = function() {\r\n            cuveService.getAll(function (cuves) {\r\n                $scope.cuves = cuves;\r\n                if (cuves) {\r\n                    $scope.IsVisibleConnection=true;\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.connecter = function() {\r\n           var request ={\"idPompe\":$scope.selectedPompe.id,\r\n                          \"idCuve\":$scope.selectedCuve.id\r\n           };\r\n            homeService.connecter(request, function (response) {\r\n                alert(' pompe '+$scope.selectedPompe.id +' connecter à la cuve '+ $scope.selectedCuve.id);\r\n                $scope.selectedPompe={\r\n\r\n                }\r\n                $scope.selectedCuve={\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n})();\r\n\n'use strict';\r\n\r\nangular.module('station-ui')\r\n    .factory('HomeApi', ['$http', 'BASE_URL', homeApi]);\r\n\r\nfunction homeApi($http, BASE_URL) {\r\n\r\n    var BASE_URL_SELF = BASE_URL + '/rest/pompe';\r\n\r\n    return {\r\n\r\n        getAll: function () {\r\n            return $http.get(BASE_URL_SELF+'/all');\r\n        },\r\n        getAllRecette : function () {\r\n            return $http.get(BASE_URL_SELF+'/calculate');\r\n        },\r\n\r\n        getOne: function (id) {\r\n            return $http.get(BASE_URL_SELF + id + '/');\r\n        },\r\n\r\n        addOne: function (pompe) {\r\n            //console.debug($http.post(BASE_URL_SELF, pompe));\r\n            return $http.post(BASE_URL_SELF, pompe);\r\n        },\r\n        connecter: function (request) {\r\n            //console.debug($http.post(BASE_URL_SELF, pompe));\r\n            return $http.put(BASE_URL_SELF + \"/connection\" + '/', request);\r\n        },\r\n\r\n        saveOne: function (pompe) {\r\n            return $http.put(BASE_URL_SELF + \"/updateIndex\" + '/', pompe);\r\n        },\r\n\r\n        deleteOne: function (id) {\r\n            return $http.delete(BASE_URL_SELF + id + '/');\r\n        },\r\n        getAllHistory: function () {\r\n            return $http.get(BASE_URL_SELF+'/allHistory');\r\n        }\r\n    }\r\n}\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('station-ui')\r\n        .controller('HistoriquePompeController', ['$scope', 'HomeService', HistoriquePompeController]);\r\n\r\n    /** @ngInject */\r\n    function HistoriquePompeController($scope, homeService) {\r\n\r\n        homeService.getAllHistory(function (pompes) {\r\n            $scope.pompes = pompes;\r\n            $scope.IsVisible = true;\r\n        });\r\n\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('station-ui')\r\n        .controller('DepotageController', ['$scope', 'CuveService', DepotageController]);\r\n\r\n    /** @ngInject */\r\n    function DepotageController($scope, cuveService) {\r\n\r\n        cuveService.getAll(function (cuves) {\r\n            $scope.cuves = cuves;\r\n        });\r\n        $scope.depot={\r\n        }\r\n\r\n        $scope.deposer = function() {\r\n            cuveService.deposer($scope.depot, function (response) {\r\n                alert($scope.depot.quantite+' Litres a été mis dans la cuve numéro '+$scope.depot.idCuve);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\nangular.module('station-ui')\r\n\t.factory('CuveService', ['CuveApi', function (cuveApi) {\r\n\r\n    return {\r\n\r\n        getAll: function (callBack) {\r\n\r\n            cuveApi.getAll() .then(function (response) {\r\n                callBack(response.data);\r\n            }).catch(function (error) {\r\n            });\r\n        },\r\n        \r\n        getOne: function (id, callBack) {\r\n\r\n            cuveApi.getOne(id).success(function (response) {\r\n                //custom, filter or make a specific mapping between response and UI\r\n                var user = response && response != \"\" ? angular.fromJson(response) : null;\r\n                console.log(user);\r\n\r\n                //Delayed precessing when http request is completed\r\n                callBack(user);\r\n            })\r\n                .error(function (response, status) {\r\n                    console.log('Error with response: ' + response + ', status :' + status);\r\n                });\r\n        },\r\n\r\n        add: function (entry, callBack) {\r\n\r\n            cuveApi.addOne(entry)\r\n                .then(function (response) {\r\n                    callBack(response);\r\n                }).catch(function (error) {\r\n                    console.debug('>> catch');\r\n                    console.debug(error);\r\n                });\r\n        },\r\n\r\n        save: function (entry, callBack) {\r\n            cuveApi.saveOne(entry).success(function (response) {\r\n                var filteredResult = response && response != \"\" ? angular.fromJson(response) : null;\r\n                //console.log(filteredResult);\r\n\r\n                //Delayed precessing when http request is completed\r\n                callBack(filteredResult);\r\n            })\r\n                .error(function (response, status) {\r\n                    console.log('Error with response: ' + response + ', status :' + status);\r\n                });\r\n        },\r\n\r\n        deposer: function (entry,callBack) {\r\n            cuveApi.deposer(entry)\r\n                .then(function (response) {\r\n                    callBack(response);\r\n                }).catch(function (error) {\r\n            });\r\n        },\r\n\r\n        delete: function (entryId, callBack) {\r\n            cuveApi.deleteOne(entryId).success(function (response) {\r\n                var filteredResult = response && response != \"\" ? angular.fromJson(response) : null;\r\n                //console.log(filteredResult);\r\n\r\n                //Delayed precessing when http request is completed\r\n                callBack(filteredResult);\r\n            })\r\n                .error(function (response, status) {\r\n                    console.log('Error with response: ' + response + ', status :' + status);\r\n                });\r\n        }\r\n\r\n    }\r\n}]);\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('station-ui')\r\n        .controller('CuveController', ['$scope', '$state', '$stateParams', 'CuveService', CuveController]);\r\n\r\n    /** @ngInject */\r\n    function CuveController($scope, $state, $stateParams, cuveService) {\r\n\r\n        $scope.cuveForm = {\r\n        };\r\n        $scope.added=false;\r\n        cuveService.getAll(function (cuves) {\r\n            $scope.isVisiblesVisible = false;\r\n            $scope.cuves = cuves;\r\n            if(cuves) {\r\n                $scope.isVisible = true;\r\n            }\r\n        });\r\n\r\n        $scope.submitCuve = function() {\r\n            cuveService.add($scope.cuveForm, function (response) {\r\n                //$stateProvider.go('home');\r\n                //$state.go('cuve-edit', {idCuve:'10'});\r\n                $scope.added=true;\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n'use strict';\r\n\r\nangular.module('station-ui')\r\n    .factory('CuveApi', ['$http', 'BASE_URL', cuveApi]);\r\n\r\nfunction cuveApi($http, BASE_URL) {\r\n\r\n    var BASE_URL_SELF = BASE_URL + '/rest/cuve';\r\n\r\n    return {\r\n\r\n        getAll: function () {\r\n            return $http.get(BASE_URL_SELF+'/all');\r\n        },\r\n\r\n        getOne: function (id) {\r\n            return $http.get(BASE_URL_SELF + id + '/');\r\n        },\r\n\r\n        addOne: function (cuve) {\r\n            //console.debug($http.post(BASE_URL_SELF, pompe));\r\n            return $http.post(BASE_URL_SELF, cuve);\r\n        },\r\n\r\n        saveOne: function (brand) {\r\n            return $http.put(BASE_URL_SELF + brand.id + '/', brand);\r\n        },\r\n\r\n        deleteOne: function (id) {\r\n            return $http.delete(BASE_URL_SELF + id + '/');\r\n        },\r\n        deposer: function (cuve) {\r\n            //console.debug($http.post(BASE_URL_SELF, pompe));\r\n            return $http.put(BASE_URL_SELF+'/depotage', cuve);\r\n        },\r\n    }\r\n}\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('station-ui')\r\n        .controller('ComptabiliteController', ['$scope', 'HomeService', ComptabiliteController]);\r\n\r\n    /** @ngInject */\r\n    function ComptabiliteController($scope, homeService) {\r\n\r\n            homeService.getAllRecette(function (response) {\r\n                $scope.pompesRecette = response;\r\n            });\r\n\r\n        $scope.getTotal = function(){\r\n            var total = 0;\r\n            for(var i = 0; i < $scope.pompesRecette.length; i++){\r\n                var pompe = $scope.pompesRecette[i];\r\n                total += pompe.recette;\r\n            }\r\n            return total;\r\n        }\r\n    }\r\n\r\n})();\r\n\nangular.module('api', [])\r\n\t.value('BASE_URL', 'http://86.245.236.219:8080');//dev version\r\n// .value('BASE_URL', 'http://localhost:8000');//prod version\r\n\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('station-ui')\r\n        .run(runBlock);\r\n\r\n    /** @ngInject */\r\n    function runBlock($log) {\r\n        $log.debug('station-ui run block end');\r\n    }\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('station-ui')\r\n        .config(routerConfig);\r\n\r\n    /** @ngInject */\r\n    function routerConfig($stateProvider, $urlRouterProvider) {\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                templateUrl: 'app/home/home.html',\r\n                controller: 'HomeController',\r\n                controllerAs: 'home'\r\n            })\r\n            .state('updatePompe', {\r\n                url: '/',\r\n                templateUrl: 'app/home/updatePompe.html',\r\n                controller: 'HomeController',\r\n                controllerAs: 'home'\r\n            })\r\n            .state('home-base', {\r\n                url: '',\r\n                templateUrl: 'app/home/home.html',\r\n                controller: 'HomeController',\r\n                controllerAs: 'home'\r\n            })\r\n\r\n            .state('cuve', {\r\n                url: '/cuve',\r\n                templateUrl: 'app/cuve/cuve.html',\r\n                controller: 'CuveController',\r\n                controllerAs: 'cuve'\r\n            })\r\n            .state('comptabilite', {\r\n                url: '/comptabilite',\r\n                templateUrl: 'app/comptabilite/comptabilite.html',\r\n                controller: 'ComptabiliteController',\r\n                controllerAs: 'comptabilite'\r\n            })\r\n\r\n            .state('depotage', {\r\n            url: '/depotage',\r\n            templateUrl: 'app/cuve/depotage.html',\r\n            controller: 'DepotageController',\r\n            controllerAs: 'depotage'\r\n        }).state('historiquePompe', {\r\n            url: '/historiquePompe',\r\n            templateUrl: 'app/home/historiqueIndex.html',\r\n            controller: 'HistoriquePompeController',\r\n            controllerAs: 'HistoriquePompeController'\r\n        })\r\n            .state('404', {\r\n                url: '/404',\r\n                template: \"<h1 style='text-align: center'>Page not found !</h1>\"\r\n            });\r\n\r\n        $urlRouterProvider.otherwise('/404');\r\n    }\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('station-ui')\r\n        .controller('AppController', ['$scope', AppCtrl]);\r\n\r\n    /** @ngInject */\r\n    function AppCtrl($scope) {\r\n\r\n        //$scope.appLocales = localeService.getLocaleCodes() ;//Object.keys(LOCALES.locales);\r\n    }\r\n})();\n/* global malarkey:false, moment:false */\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('station-ui')\r\n        .constant('LOCALES', {\r\n            'locales': {\r\n                'zh_CN': '中国',\r\n                'fr_FR': 'Français',\r\n                'en_GB': 'English'\r\n            },\r\n            'preferredLocale': 'en_GB'\r\n        });\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('station-ui')\r\n        .config(config)\r\n\r\n        .config(['$httpProvider', function ($httpProvider) {\r\n            //$httpProvider.interceptors.push('SessionInjector');\r\n        }])\r\n\r\n        .config(['$httpProvider', function ($httpProvider) {\r\n            //$httpProvider.interceptors.push('LoginInterceptor');\r\n        }]);\r\n\r\n    /** @ngInject */\r\n    function config($logProvider) {\r\n        // Enable log\r\n        $logProvider.debugEnabled(true);\r\n\r\n    }\r\n\r\n})();\r\n\nangular.module(\"station-ui\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/comptabilite/comptabilite.html\",\"<!DOCTYPE html><html lang=en><head><meta charset=UTF-8><title>Title</title></head><body ng-app=station-ui ng-controller=ComptabiliteController><div><h4 class=text-center>Le compte est fait à la base des Index des Pompes</h4></div><div class=\\\"well well-sm\\\" ng-if=pompesRecette><h3 class=text-center>Recette</h3><table class=\\\"table table-bordered\\\"><thead><tr style=\\\"background-color: #d58512\\\"><th>Numéro de la pompe</th><th>Recette</th></tr></thead><tbody ng-repeat=\\\"pompe in pompesRecette\\\"><tr><td>{{pompe.id}}</td><td>{{pompe.recette}}</td></tr></tbody><tfoot><tr style=\\\"background-color: slategrey\\\"><td><b>TOTALE</b></td><td><b>{{ getTotal() }}</b></td></tr></tfoot></table></div></body></html>\");\n$templateCache.put(\"app/cuve/cuve.html\",\"<html><head><title>cuve</title><head><body ng-app=station-ui ng-controller=cuveController><!--<a ui-sref=\\\"home\\\">Back to home page</a>--><div class=container><div class=\\\"well well-sm\\\"><h2 class=text-center>Ajouter une Cuve</h2><form ng-submit=submitCuve() class=form-horizontal><pre>\\r\\n\t\t\tNuméro :  <input type=text ng-model=cuveForm.id>\\r\\n\\r\\n\t\t\tCapacité: <input type=text ng-model=cuveForm.capacite>\\r\\n        </pre><input type=submit class=\\\"btn btn-primary center-block\\\" value=Sauvgarder><div class=\\\"alert alert-success\\\" ng-if=\\\"added===true\\\"><strong></strong> Cuve ajouté avec succes</div></form></div><div class=\\\"well well-sm\\\"><h3 class=text-center>Liste des Cuves</h3><table class=\\\"table table-bordered\\\" ng-show=\\\"cuves.length >0\\\"><tr style=\\\"background-color: #d58512\\\"><th>Numéro</th><th>Capacité</th><th>Contenu</th><th>derniers depot</th></tr><tbody ng-repeat=\\\"cuve in cuves\\\"><tr><td>{{cuve.id}}</td><td>{{cuve.capacite}}</td><td>{{cuve.contenu}}</td><td>{{cuve.lastdepot | date: \\'dd-MM-yyyy HH:mm\\'}}</td></tr></tbody></table></div></div></body></head></head></html>\");\n$templateCache.put(\"app/cuve/depotage.html\",\"<!DOCTYPE html><html lang=en><head><meta charset=UTF-8><title>Title</title></head><body><html><head><title>AngularJS $http Rest example</title><head><body ng-app=station-ui ng-controller=DepotageController><div class=container><div class=\\\"well well-sm\\\"><h3 class=text-center>Dépot dans une Cuve</h3><h4>Selectionnez la Cuve</h4><pre>\\r\\n       Numéro : <select class=selectpicker ng-model=depot.idCuve ng-options=\\\"cuve.id as cuve.id for cuve in cuves\\\"></select>\\r\\n\\r\\n       Quantité:  <input type=text ng-model=depot.quantite>\\r\\n        </pre><div><button ng-click=deposer() class=\\\"btn btn-primary\\\">Sauvgarder</button></div></div></div></body></head></head></html></body></html>\");\n$templateCache.put(\"app/home/historiqueIndex.html\",\"<!DOCTYPE html><html lang=en><head><meta charset=UTF-8><title>Hitorique Pompe</title></head><body><div class=\\\"well well-sm\\\"><h3 class=text-center>Historique des pompes</h3><table class=\\\"table table-bordered\\\" ng-show=IsVisible><tr style=\\\"background-color: #d58512\\\"><th>Numéro de la Pompe</th><th>Index Actuel</th><th>Ancien Index</th><th>date de dernière mise à jour</th></tr><tbody ng-repeat=\\\"pompe in pompes\\\"><tr><td>{{pompe.id}}</td><td>{{pompe.index}}</td><td>{{pompe.lastIndex}}</td><td>{{pompe.lasteUpdate |date: \\'dd-MM-yyyy HH:mm\\'}}</td></tr></tbody></table></div></body></html>\");\n$templateCache.put(\"app/home/home.html\",\"<html><head><title>AngularJS $http Rest example</title><head><body ng-app=station-ui ng-controller=HomeController><div class=container><div class=\\\"well well-sm\\\"><h3 class=text-center>Ajouter une pompe</h3><form ng-submit=submitPompe()><pre>\\r\\n        Numéro: <input type=text required ng-model=pompeForm.id>\\r\\n\\r\\n        Index : <input type=text required pattern=[0-9]* ng-model=pompeForm.index>\\r\\n        </pre><input type=submit class=\\\"btn btn-primary center-block\\\" value=Sauvgarder><div class=\\\"alert alert-success\\\" ng-if=\\\"added===true\\\"><strong></strong> Pompe ajouté avec succes</div></form></div><button ng-click=getAllCuves() class=\\\"btn btn-primary\\\" ng-show=!IsVisibleConnection>Connexion</button><div class=\\\"well well-sm\\\" ng-show=IsVisibleConnection><h4 class=text-center>Connecter une Pompe à une Cuve</h4>Selectionez la pompe:<select class=selectpicker ng-model=selectedPompe.id ng-options=\\\"item.id as item.id for item in pompes\\\"></select>Selectionez la Cuve :<select ng-model=selectedCuve.id ng-options=\\\"cuve.id as cuve.id for cuve in cuves\\\"></select><div><button ng-click=connecter() class=\\\"btn btn-primary\\\">Connecter</button></div></div></div></body></head></head></html>\");\n$templateCache.put(\"app/home/updatePompe.html\",\"<html><head><title>AngularJS $http Rest example</title><head><body ng-app=station-ui ng-controller=HomeController><div class=container><div class=\\\"well well-sm\\\"><h3 class=text-center>Modifier L\\'index d\\'une pompe</h3><h4>Selectionnez la pompe</h4><pre>\\r\\n       Numéro : <select class=selectpicker ng-model=selectedPompe.id required ng-options=\\\"item.id as item.id for item in pompes\\\"></select>\\r\\n\\r\\n       Index:  <input type=number required ng-model=selectedPompe.index>\\r\\n        </pre><div><button type=submit ng-click=updateIndex() class=\\\"btn btn-primary\\\">Modifier</button></div></div><div class=\\\"well well-sm\\\"><h3 class=text-center>Liste des pompes</h3><table class=\\\"table table-bordered\\\" ng-show=IsVisible><tr style=\\\"background-color: #d58512\\\"><th>Pompe</th><th>Index Actuel</th><th>Ancien Index</th><th>date de prelevement</th></tr><tbody ng-repeat=\\\"pompe in pompes\\\"><tr><td>{{pompe.id}}</td><td>{{pompe.index}}</td><td>{{pompe.lastIndex}}</td><td>{{pompe.lasteUpdate |date: \\'dd-MM-yyyy HH:mm\\'}}</td></tr></tbody></table></div></div></body></head></head></html>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<nav class=\\\"navbar navbar-default\\\" style=\\\"background-color: #5bc0de\\\"><h5 class=text-center>Cheikh Bay CHEIKH MOHAMEDOU 2018</h5></nav>\");\n$templateCache.put(\"app/components/header/header.html\",\"<html><head><meta charset=utf-8><meta http-equiv=X-UA-Compatible content=\\\"IE=edge\\\"><meta name=viewport content=\\\"width=device-width,initial-scale=1\\\"><title></title></head><body><div class=bs-example><nav class=\\\"navbar navbar-default\\\" style=\\\"background-color: #5bc0de\\\"><div class=navbar-header><ul class=\\\"nav navbar-nav\\\"><div id=gestionCuve class=\\\"collapse navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\"><li class=dropdown><a data-toggle=dropdown class=dropdown-toggle href=\\\"\\\">Gestion des Cuves <b class=caret></b></a><ul class=dropdown-menu><li><a ui-sref=cuve>Ajouter une Cuve</a></li><li><a ui-sref=depotage>Dépotage</a></li></ul></li><li class=dropdown><a data-toggle=dropdown class=dropdown-toggle href=\\\"\\\">Gestion des Pompes <b class=caret></b></a><ul class=dropdown-menu><li><a ui-sref=home>Ajouter une Pompe</a></li><li><a ui-sref=updatePompe>Modification d\\'Index</a></li><li><a ui-sref=historiquePompe>Historique Pompe</a></li></ul></li><li><a ui-sref=comptabilite>Comptabilité</a></li></ul></div></ul></div></nav></div></body></html>\");}]);"],"sourceRoot":"/source/"}